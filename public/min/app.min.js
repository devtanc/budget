angular.module("budgetApp",["ngRoute"]).config(["$routeProvider",function(e){e.when("/",{templateUrl:"/temps/frontPage.temp.html",controller:"FrontPageController"}).when("/viewAll",{templateUrl:"/temps/all.temp.html",controller:"ViewAllPageController"}).when("/edit/:recurrence/:creationDate",{templateUrl:"/temps/edit.temp.html",controller:"EditPageController"}).when("/createNew",{templateUrl:"/temps/new.temp.html",controller:"CreationController"})}]);var budgetApp=angular.module("budgetApp");budgetApp.controller("FrontPageController",["$scope","$location","$http","expensesService",function(e,t,n,a){e.goTo=function(e){t.path(e)},a.refreshExpenses().then(function(){a.getFilteredExpenses().then(function(t){e.expenses=t.expenses,e.paycheckStart=new Date(t.paycheckStart),e.paycheckEnd=new Date(t.paycheckEnd),n.get("/api/getExpense/system/paycheck-actuals").then(function(t){e.remainingPay=t.data.Item.leftoverAmt,e.netPay=t.data.Item.paycheckAmt,e.recalculateTotal()})})}),e.updatePaycheck=function(){var t=moment(e.paycheckStart).format("YYYY-MM-DD");a.getFilteredExpenses(t).then(function(t){e.expenses=t.expenses,e.paycheckStart=t.paycheckStart,e.paycheckEnd=t.paycheckEnd,e.recalculateTotal()})},e.recalculateTotal=function(){e.total=e.expenses.reduce(function(e,t){return e+parseFloat(t.amount)},parseFloat(e.expenses[0].amount)),e.total-=e.remainingPay}}]),budgetApp.controller("ViewAllPageController",["$scope","$location","expensesService",function(e,t,n){e.goTo=function(e,n,a){"edit"===e?t.path(e+"/"+n+"/"+encodeURIComponent(a)):t.path(e)},n.getExpenses().then(function(t){e.expenses=t})}]),budgetApp.controller("EditPageController",["$scope","$location","$http","$routeParams","expensesService","schemas",function(e,t,n,a,o,r){var c=a.recurrence,l=a.creationDate;e.goTo=function(e){t.path(e)},e.globalFields=r.getSchema("globalFields"),e.recurrenceTypes=r.getSchema("recurrenceTypes"),e.calculatedFields=r.getCalculatedFields(c),o.getExpense(c,decodeURIComponent(l)).then(function(t){e.expense=t||null}).catch(function(e){console.error(e)}),e.updateFields=function(){e.calculatedFields=r.getCalculatedFields(e.expense.recurrence)},e.deleteExpense=function(){n({method:"DELETE",url:"/api/deleteExpense",headers:{"Content-Type":"application/json"},data:{primary:c,secondary:decodeURIComponent(l)}}).then(function(){o.refreshExpenses().then(function(){e.goTo("/viewAll")})}).catch(function(e){console.error(e)})},e.updateExpense=function(){if(c!==e.expense.recurrence){var t={recurrence:e.expense.recurrence,creationDate:l};e.globalFields.forEach(function(n){t[n.name]=e.expense[n.name]}),e.calculatedFields.fields.forEach(function(n){t[n.name]=e.expense[n.name]}),n({method:"POST",url:"/api/createExpense",headers:{"Content-Type":"application/json"},data:t}).then(function(){e.deleteExpense()}).catch(function(e){console.error(e)})}else n({method:"POST",url:"/api/updateExpense",headers:{"Content-Type":"application/json"},data:e.expense}).then(function(){o.refreshExpenses().then(function(){e.goTo("/viewAll")})}).catch(function(e){console.error(e)})}}]),budgetApp.controller("CreationController",["$scope","$location","$http","schemas",function(e,t,n,a){e.recurrence=void 0,e.globalFields=a.getSchema("globalFields"),e.recurrenceTypes=a.getSchema("recurrenceTypes"),e.goTo=function(e){t.path(e)},e.updateFields=function(t){e.calculatedFields=a.getCalculatedFields(t)},e.saveExpense=function(){var t={recurrence:e.recurrence,creationDate:(new Date).toISOString()};e.globalFields.forEach(function(e){t[e.name]=e.value}),e.calculatedFields.fields.forEach(function(e){t[e.name]=e.value}),n({method:"POST",url:"/api/createExpense",headers:{"Content-Type":"application/json"},data:t}).then(function(){e.goTo("/")}).catch(function(e){console.error(e)})}}]);var budgetApp=angular.module("budgetApp"),budgetApp=angular.module("budgetApp");budgetApp.service("expensesService",["$http","$q",function(e,t){var n=this;this.refreshExpenses=function(){return e.get("/api/getAllExpenses").then(function(e){return n.expenses=e.data,n.expenses})},this.getExpenses=function(){return n.expenses?t.when(n.expenses):n.refreshExpenses()},this.getFilteredExpenses=function(n){return n?/\d{4}-\d{2}-\d{2}/.test(n)?e.get("/api/getExpensesStarting/"+n).then(function(e){return e.data}):t.reject("Invalid date format. Must follow the format YYYY-MM-DD"):e.get("/api/getExpensesThisPaycheck").then(function(e){return e.data})},this.getExpense=function(e,a,o){var r=t.defer(),c=_.find(n.expenses,function(t){return t.recurrence===e&&t.creationDate===a});return c?r.resolve(c):o?r.reject("Expense not found in refreshed expense list"):n.refreshExpenses().then(function(){r.resolve(n.getExpense(e,a,!0))}),r.promise}}]),budgetApp.service("schemas",function(){var e={};this.getSchema=function(t){return _.cloneDeep(e[t])},this.getSchemas=function(t){var n={};return t.forEach(function(t){n[t]=_.cloneDeep(e[t])}),n},this.getCalculatedFields=function(t){return _.find(e.recurrenceTypes,function(e){return e.name===t})},e.globalFields=[{name:"amount",type:"number",step:"0.01",value:void 0},{name:"payee",type:"text",value:void 0},{name:"purpose",type:"text",value:void 0}],e.recurrenceTypes=[{name:"paycheck",fields:[]},{name:"monthly",fields:[{name:"day_of_month",type:"number",step:"1",value:void 0}]},{name:"monthly-on",fields:[{name:"day_of_week",options:["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],value:void 0},{name:"which",type:"number",step:"1",value:void 0}]},{name:"yearly",fields:[{name:"day_of_month",type:"number",step:"1",value:void 0},{name:"month",options:["January","February","March","April","May","June","July","August","September","October","November","December"],value:void 0}]},{name:"one-off",fields:[{name:"date",type:"date",value:void 0},{name:"paid",type:"checkbox",value:!1}]}]});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
